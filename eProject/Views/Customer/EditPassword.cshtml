@model eProject.Models.MyPasswordEdit
@{
    ViewBag.Title = "Change My Password";
}
@section styles {
    <link rel="stylesheet" href="~/Content/Css/Customer/EditPassword.css" />
}

<div class="container">
    <h1 class="page-title">
        Change My Password
    </h1>
    <div class="dataBox">
        @using (Html.BeginForm("UpdatePassword", "Customer", FormMethod.Post, new { @class = "passwordForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HttpMethodOverride("PUT")
            <div class="form-group">
                @Html.LabelFor(p => p.CurrentPassword, new { @class = "form-label" })
                @Html.PasswordFor(p => p.CurrentPassword, new { @class = "form-input", placeHolder = "Enter new password" })
                @Html.ValidationMessageFor(p => p.CurrentPassword, null, new { @class = "invalidMessage" })
            </div>
            <div class="form-group">
                @Html.LabelFor(p => p.NewPassword, new { @class = "form-label" })
                @Html.PasswordFor(p => p.NewPassword, new { @class = "form-input", placeHolder = "Enter new password" })
                @Html.ValidationMessageFor(p => p.NewPassword, null, new { @class = "invalidMessage" })
            </div>
            <div class="form-group">
                @Html.LabelFor(p => p.NewPasswordConfirm, new { @class = "form-label" })
                @Html.PasswordFor(p => p.NewPasswordConfirm, new { @class = "form-input", placeHolder = "Enter new password confirm" })
                @Html.ValidationMessageFor(p => p.NewPasswordConfirm, null, new { @class = "invalidMessage" })
            </div>
            <button class="form-btn">
                Update password
            </button>
        }
    </div>
</div>