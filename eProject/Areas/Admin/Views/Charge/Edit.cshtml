@model eProject.Models.Charge
@{
    ViewBag.Title = "Add charge";
}
@section styles {
    <link rel="stylesheet" href="~/Content/Css/AdminCss/Charge/Interaction.css" />
}


<h1 class="page-title">
    Edit charge
</h1>

<div class="dataBox">
    @using (Html.BeginForm("Update", "Charge", new { area = "Admin" }, FormMethod.Post))
    {
        @Html.HttpMethodOverride("PUT")
        @Html.HiddenFor(a => a.ChargeID)
        @Html.HiddenFor(a => a.BillID)
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(a => a.ChargeName, new { @class = "form-label" })
            @Html.EditorFor(a => a.ChargeName, new { htmlAttributes = new { @class = "form-input", placeHolder = "Enter charge name" } })
            @Html.ValidationMessageFor(a => a.ChargeName, null, new { @class = "invalidMessage" })
        </div>
        <div class="form-group">
            @Html.LabelFor(a => a.Value, new { @class = "form-label" })
            @Html.EditorFor(a => a.Value, new { htmlAttributes = new { @class = "form-input", placeHolder = "Enter charge value" } })
            @Html.ValidationMessageFor(a => a.Value, null, new { @class = "invalidMessage" })
        </div>
        <div class="form-group">
            @Html.LabelFor(a => a.Description, new { @class = "form-label" })
            @Html.TextAreaFor(a => a.Description, new { @class = "form-input", placeHolder = "Enter description" })
            @Html.ValidationMessageFor(a => a.Description, null, new { @class = "invalidMessage" })
        </div>
        <button class="form-btn">
            Add
        </button>
    }
</div>